<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.iei.question.model.dao.QuestionDao">

  <select id="selectQuestionList" resultType="question">
  	select * from 
    		(select rownum as rnum, q.* from 
        		(select 
            		question_no, question_title, question_writer, reg_date 
       			 from question order by question_no desc
       			 )q
       		)
  	where rnum between #{start} and #{end}
  </select>
  
  <select id="selectQuestionTotalCount" resultType="int">
  	select count(*) from question
  </select>
  
  <select id="searchWriter" resultType="question">
  	select * from question where question_writer like '%'||#{search}||'%'
  </select>
  
  <select id="getQuestionNo" resultType="int">
  	select question_seq.nextval from dual
  </select>
  
  <insert id="insertQuestion">
  	insert into question values(#{questionNo}, #{questionTitle}, #{questionWriter}, #{questionContent}, to_char(sysdate, 'yyyy-mm-dd'))
  </insert>
  
  <insert id="insertQuestionFile">
  	insert into question_file values(file_seq.nextval, #{questionNo}, #{filename}, #{filepath})
  </insert>
  
  <select id="selectOneQuestion" resultType="question">
  	select * from question where question_no = #{questionNo}
  </select>
  
  <select id="selectQuestionFile" resultType="questionFile">
  	select * from question_file where question_no = #{questionNo}
  </select>
  
  <select id="selectQuestionCommentList" resultType="questionComment">
  	select * from question_comment where question_comment_ref = #{questionNo}
  </select>
  
  <select id="selectQuestionCommentLikeCount" resultType="int">
  	select count(*) from question_comment_like where question_comment_no = #{questionCommentNo}
  </select>
  
  <select id="selectOneQuestionFile" resultType="questionFile">
  	select * from question_file where question_file_no = #{questionFileNo}
  </select>
  
  <insert id="insertQuestionComment">
  	insert into question_comment values(
  			qustion_comment_seq.nextval,
  			#{questionCommentWriter},
  			#{questionCommentContent},
  			to_char(sysdate, 'yyyy-mm-dd'),
  			#{questionRef},
  			<if test="questionCommentRef == 0">
  				null
  			</if>
  			<if test="questionCommentRef != 0">
  				#{questionCommentRef}
  			</if>
  	)
  </insert>
  
  
</mapper>








































